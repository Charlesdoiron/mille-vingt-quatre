{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Menu.js","webpack:///./src/components/Layout.js"],"names":["BlogIndex","render","data","this","props","blogPosts","site","siteMetadata","title","allContentfulBlogPost","edges","map","node","slug","key","to","React","Component","pageQuery","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","StaticQuery","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Menu","allContentfulPages","Layout","className"],"mappings":"qLAKMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KAEFG,GADYH,EAAKI,KAAKC,aAAaC,MACvBN,EAAKO,sBAAsBC,OAC7C,OACE,kBAAC,IAAD,KACGL,EAAUM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACVJ,EAAQI,EAAKJ,OAASI,EAAKC,KACjC,OACE,yBAAKC,IAAKF,EAAKC,MACb,4BACE,kBAAC,IAAD,CAAME,GAAIH,EAAKC,MAAOL,U,GAZdQ,IAAMC,WAsBfjB,YACR,IAAMkB,EAAS,c,iCC5BtB,uHAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBL,IAAMM,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBtB,EAAuB,EAAvBA,KAAMuB,EAAiB,EAAjBA,MAAOxB,EAAU,EAAVA,OACzDyB,EAAYxB,EACdA,EAAKA,KACLsB,EAAgBC,IAAUD,EAAgBC,GAAOvB,KAErD,OACE,kBAAC,IAAMyB,SAAP,KACGD,GAAazB,EAAOyB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAxB,GAAU,IACpBF,EAAkCE,EAAlCF,KAAMuB,EAA4BrB,EAA5BqB,MAAOxB,EAAqBG,EAArBH,OAAQ4B,EAAazB,EAAbyB,SAE7B,OACE,kBAACR,EAAmBS,SAApB,MACG,SAAAN,GAAe,OACd,kBAACD,EAAD,CACErB,KAAMA,EACNuB,MAAOA,EACPxB,OAAQA,GAAU4B,EAClBL,gBAAiBA,S,oBCzC3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,0ECsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEtB,IAAMuB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,0SCHLC,EAAO,SAAC,GAAD,SAAExC,KACRyC,mBAAmBjC,MAAMC,KAAI,YAAa,IAAXC,EAAU,EAAVA,KAC3BC,EAAeD,EAAfC,KAAML,EAASI,EAATJ,MACb,OAAO,kBAAC,IAAD,CAAMO,GAAIF,EAAMC,IAAKD,GAAOL,OAIxB,WAAAJ,GAAK,OAClB,kBAAC,IAAD,CACEqB,MAAK,aAYLxB,OAAQ,SAAAC,GAAI,OAAI,kBAAC,EAAD,eAAMA,KAAMA,GAAUE,EAAtB,CAA6BU,IAAKZ,EAAKW,SAbzD,UCDa+B,IARA,SAAAxC,GACb,OACE,yBAAKyC,UAAU,UACb,kBAAC,EAAD,MACCzC,EAAMyB","file":"component---src-pages-index-js-e8766ecc7005a7d97b21.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"./../components/Layout\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const blogPosts = data.allContentfulBlogPost.edges\n    return (\n      <Layout>\n        {blogPosts.map(({ node }) => {\n          const title = node.title || node.slug\n          return (\n            <div key={node.slug}>\n              <h3>\n                <Link to={node.slug}>{title}</Link>\n              </h3>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulBlogPost {\n      edges {\n        node {\n          title\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport {useStaticQuery, graphql, Link, StaticQuery} from \"gatsby\"\n\n\nconst Menu = ({data}) => (\n  data.allContentfulPages.edges.map(({node}) => {\n    const {slug, title} = node\n    return <Link to={slug} key={slug}>{title}</Link>\n  })\n)\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allContentfulPages {\n        edges {\n          node {\n            slug\n            title\n          }\n        }\n      }\n    }\n  `}\n    render={data => <Menu data={data} {...props} key={data.slug} />} />\n)\n\n\n\n\n","import React from \"react\"\nimport Menu from \"./../components/Menu\"\n\nconst Layout = props => {\n  return (\n    <div className=\"layout\">\n      <Menu />\n      {props.children}\n    </div>\n  )\n}\nexport default Layout\n"],"sourceRoot":""}