{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Menu.js","webpack:///./src/components/Layout.js"],"names":["BlogPostContentfulTemplate","render","blogPost","this","props","data","contentfulBlogPost","pageContext","previous","next","title","subtitle","style","display","flexWrap","justifyContent","listStyle","padding","to","node","slug","rel","React","Component","pageQuery","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","StaticQuery","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Menu","allContentfulPages","edges","map","key","Layout","className"],"mappings":"qLAGMA,E,gLACJC,OAAA,WACE,IAAMC,EAAWC,KAAKC,MAAMC,KAAKC,mBAD1B,EAEoBH,KAAKC,MAAMG,YAA9BC,EAFD,EAECA,SAAUC,EAFX,EAEWA,KAClB,OACE,kBAAC,IAAD,KACE,4BAAKP,EAASQ,OACd,2BAAIR,EAASS,UACb,wBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAQ,MAGV,4BACGT,GACC,kBAAC,IAAD,CAAMU,GAAIV,EAASW,KAAKC,KAAMC,IAAI,QAAlC,QACQb,EAASW,KAAKT,QAI1B,4BACGD,GACC,kBAAC,IAAD,CAAMS,GAAIT,EAAKU,KAAKC,KAAMC,IAAI,QAA9B,QACQZ,EAAKU,KAAKT,W,GA3BSY,IAAMC,WAqChCvB,YAER,IAAMwB,EAAS,a,iCC1CtB,uHAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBL,IAAMM,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBzB,EAAuB,EAAvBA,KAAM0B,EAAiB,EAAjBA,MAAO9B,EAAU,EAAVA,OACzD+B,EAAY3B,EACdA,EAAKA,KACLyB,EAAgBC,IAAUD,EAAgBC,GAAO1B,KAErD,OACE,kBAAC,IAAM4B,SAAP,KACGD,GAAa/B,EAAO+B,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAA9B,GAAU,IACpBC,EAAkCD,EAAlCC,KAAM0B,EAA4B3B,EAA5B2B,MAAO9B,EAAqBG,EAArBH,OAAQkC,EAAa/B,EAAb+B,SAE7B,OACE,kBAACR,EAAmBS,SAApB,MACG,SAAAN,GAAe,OACd,kBAACD,EAAD,CACExB,KAAMA,EACN0B,MAAOA,EACP9B,OAAQA,GAAUkC,EAClBL,gBAAiBA,S,oBCzC3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,0ECsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEtB,IAAMuB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,0SCHLC,EAAO,SAAC,GAAD,SAAE3C,KACR4C,mBAAmBC,MAAMC,KAAI,YAAa,IAAXhC,EAAU,EAAVA,KAC3BC,EAAeD,EAAfC,KAAMV,EAASS,EAATT,MACb,OAAO,kBAAC,IAAD,CAAMQ,GAAIE,EAAMgC,IAAKhC,GAAOV,OAIxB,WAAAN,GAAK,OAClB,kBAAC,IAAD,CACE2B,MAAK,aAYL9B,OAAQ,SAAAI,GAAI,OAAI,kBAAC,EAAD,eAAMA,KAAMA,GAAUD,EAAtB,CAA6BgD,IAAK/C,EAAKe,SAbzD,UCDaiC,IARA,SAAAjD,GACb,OACE,yBAAKkD,UAAU,UACb,kBAAC,EAAD,MACClD,EAAM+B","file":"component---src-templates-blog-post-js-ddcb49b089e0c8c45898.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nclass BlogPostContentfulTemplate extends React.Component {\n  render() {\n    const blogPost = this.props.data.contentfulBlogPost\n    const { previous, next } = this.props.pageContext\n    return (\n      <Layout>\n        <h1>{blogPost.title}</h1>\n        <p>{blogPost.subtitle}</p>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: `0`,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.node.slug} rel=\"prev\">\n                Back {previous.node.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.node.slug} rel=\"next\">\n                Next {next.node.title}\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostContentfulTemplate\n\nexport const pageQuery = graphql`\n  query ContentfulBlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      subtitle\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport {useStaticQuery, graphql, Link, StaticQuery} from \"gatsby\"\n\n\nconst Menu = ({data}) => (\n  data.allContentfulPages.edges.map(({node}) => {\n    const {slug, title} = node\n    return <Link to={slug} key={slug}>{title}</Link>\n  })\n)\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allContentfulPages {\n        edges {\n          node {\n            slug\n            title\n          }\n        }\n      }\n    }\n  `}\n    render={data => <Menu data={data} {...props} key={data.slug} />} />\n)\n\n\n\n\n","import React from \"react\"\nimport Menu from \"./../components/Menu\"\n\nconst Layout = props => {\n  return (\n    <div className=\"layout\">\n      <Menu />\n      {props.children}\n    </div>\n  )\n}\nexport default Layout\n"],"sourceRoot":""}